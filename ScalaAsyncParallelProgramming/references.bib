@article{AnOverviewOfTheScalaProgrammingLanguage,
author = {Odersky, Martin and Altherr, Philippe and Cremet, Vincent and Emir, Burak and Maneth, Sebastian and Micheloud, Stéphane and Mihaylov, Nikolay and Schinz, Michel and Stenman, Erik and Zenger, Matthias},
year = {2008},
month = {12},
pages = {},
title = {An Overview of the Scala Programming Language}
}

@article{ScalaJs,
      title = {Scala.js: Type-Directed Interoperability with Dynamically  Typed Languages},
      author = {Doeraene, Sébastien},
      pages = {10},
      year = {2013},
      abstract = {Interoperability between statically typed and dynamically  typed languages is increasingly important, as can be  witnessed by the many statically typed languages targeting  JavaScript. Interoperating with both the object-oriented  and functional features of JavaScript is essential, if only  to manipulate the DOM, yet existing languages have very  poor support for this. We present Scala.js, a dialect of  Scala compiling to JavaScript. Its interoperability system  is based on a powerful and intuitive framework for  type-directed interoperability with dynamically typed  languages. The framework combines facade types for  JavaScript values; user-defined, implicit, type-directed  cross-language conversions; and a Dynamic type building on  facade types and implicit conversions. It accommodates both  the functional and object-oriented features of Scala and  JavaScript, and provides very natural interoperability  between the two languages. It is expressive enough to  represent the DOM and jQuery APIs, among others, both in  its statically typed and dynamically typed flavors.},
      url = {http://infoscience.epfl.ch/record/190834},
}

@misc{FuturePromiseScalaDocs,
  title = {Futures and Promises},
  howpublished = {\url{https://docs.scala-lang.org/overviews/core/futures.html}},
  note = {Accessed: 2019-05-08}
}

@misc{FuturePromiseNeophyte,
  title = {The Neophyte's Guide to Scala},
  howpublished = {\url{https://danielwestheide.com/blog/2013/01/16/the-neophytes-guide-to-scala-part-9-promises-and-futures-in-practice.html}},
  note = {Accessed: 2019-05-08}
}

@misc{SingletonObj,
  title = {Singleton Objects},
  howpublished = {\url{https://docs.scala-lang.org/tour/singleton-objects.html}},
  note = {Accessed: 2019-05-08}
}

@book{ScalaInAction,
 author = {Raychaudhuri, Nilanjan},
 title = {Scala in Action},
 year = {2013},
 isbn = {1935182757, 9781935182757},
 publisher = {Manning Publications Co.},
 address = {Greenwich, CT, USA},
} 

@misc{FutureJava,
  title = {Guide to java.util.concurrent.Future},
  howpublished = {\url{https://www.baeldung.com/java-future}},
  note = {Accessed: 2019-05-09}
}

@misc{FutureJs,
  title = {JavaScript Promises: an Introduction},
  howpublished = {\url{https://developers.google.com/web/fundamentals/primers/promises#chaining}},
  note = {Accessed: 2019-05-09}
}

@book{ProgrammingInScala,
 author = {Odersky, Martin and Spoon, Lex and Venners, Bill},
 title = {Programming in Scala: Updated for Scala 2.12},
 year = {2016},
 isbn = {0981531687, 9780981531687},
 edition = {3rd},
 publisher = {Artima Incorporation},
 address = {USA},
} 

@misc{AkkaDocs,
  title = {Akka Documentation},
  howpublished = {\url{https://doc.akka.io/docs/akka/2.5.5/scala/}},
  note = {Accessed: 2019-05-09}
}

@misc{ErlangVsScala,
  title = {Erlang vs Scala, a history of tradeoffs},
  howpublished = {\url{https://medium.com/@emqtt/erlang-vs-scala-5b5190326ef5}},
  note = {Accessed: 2019-05-12}
}